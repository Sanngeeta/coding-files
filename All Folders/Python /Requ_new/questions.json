{
    "id": "2870",
    "parent_exercise_id": null,
    "name": "Question 6",
    "slug": "functions__functions-question5",
    "sequence_num": 1100,
    "review_type": "peer",
    "solution": null,
    "content": "[{\"type\":\"markdown\",\"value\":\"\\n\\n## Question 6\\n Yeh question 3 parts mein. Teenon parts ka code likh ke ek hi file mein submit karo. \\n\\n### Question (Part 1)\\n `calculator` naam ka ek function banao jo teen argument leta ho - `number_x`, `number_y`, `operation`. `number_x` aur `number_y` mein hum humesha do integers denge aur operation mein kaunsa operation karna hai woh denge. Jaise: * Agar operation mein \\\"add\\\" diya toh number_x aur number_y ko add kar ke returna karega.\\n*  Agar operation mein \\\"subtract\\\" diya toh number_x aur number_y ko subtract kar ke return karenge.\\n*  Agar operation mein \\\"multiply\\\" diya toh number_x ko number_y se multiply kar ke returna karega.\\n*  Agar operation mein \\\"divide\\\" diya toh number_x ko number_y se divide kar ke return karega\\n\\n Neeche kuch function calls ke examples diye hue hain: * `calculator(20, 25, \\\"add\\\")` call karne pe 45 returna karega. 45 hume 20+25 karne se milega.\\n* `calculator(40, 3, \\\"subtract\\\")` call karne pe 37 return karega. 37 hume 40-3 karne se milega.\\n* `calculator(10, 4, \\\"multiply\\\")` call karne pe 40 return karega. 40 hume 10*4 karne se milega.\\n* `calculator(40, 4, \\\"divide\\\")` call karnse pe 10 return karega. 10 hume 40/3 karne se milega.\\n\\n Function likhne ke baad, yeh kaam karne ke liye function call karo aur variable mein value daalo. * 24 aur 20 ko add karo aur number_1 variable mein value daalo\\n* 50 aur 60 ko multiply karo aur number_2 variable mein value daalo\\n* 80 aur 120 ko divide karo aur number_3 variable mein value daalo\\n* 90 aur 23 ko subtract karo aur number_4 variable mein value daalo\\n\\n\\n \\n\\n### Question (Part 2)\\n\\n Ab `input` ka use kar ke user se 2 numbers input lo. **Note: Yeh karne ke liye koi function banane ki zaroorat nahi hai.** Fir calculator function ko 4 baar call call kar ke inn dono numbers do add, subtract, multiply, divide karo aur result ko 4 alag variables mein daalo. Woh variables ka naam yeh hoga: * *add_result* add operation ka result store karega\\n* *subtract_result* subtract operation ka result store karega\\n* *multiply_result* multiple operation ka result store karega\\n* *divide_result* divide operation ka result store karega\\n\\n Fir upar wale chaaron variables ko print karo. Final code ko submit karo :) \\n\\n### Question (Part 2)\\n\\n `list_change` naam ka ek function ka code likho jo 2 lists jisme integers arguments ki tarah le aur fir unn lists ki woh items jo same index number (kram) pe hain unko multiply kar ke ek nayi list return karvaye. **Aapko multiply karne ke liye *calculator* function ka use karna hai. Normal tareeke se multiply nahi kar sakte ho.** Jaise agar hum function ko aise call karenge toh: \"},{\"type\":\"python\",\"value\":{\"code\":\"multiple_list = list_change([5, 10, 50, 20], [2, 20, 3, 5])\",\"testCases\":[]}},{\"type\":\"markdown\",\"value\":\"Yahan *multiple_list* ki yeh value honi chaiye: \"},{\"type\":\"python\",\"value\":{\"code\":\"[10, 200, 150, 100]\",\"testCases\":[]}},{\"type\":\"markdown\",\"value\":\"10, 5 aur 2 ko multiple kar ke aaya, 200 10 aur 20 ko multiple kar ke, 150 50 aur 3 ko, 100 20 aur 5 ko. \"}]",
    "submission_type": "url",
    "github_link": "https://github.com/navgurukul/newton/tree/master/functions/functions-question5.md"
}